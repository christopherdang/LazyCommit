{
  "name": "lazycommit",
  "displayName": "Lazy Commit",
  "description": "Summarize your Git changes with AI and commit the message for you.",
  "version": "0.0.4",
  "publisher": "ChristopherDang",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "activationEvents": [
    "onCommand:lazyCommit.generateMessage",
    "onCommand:lazyCommit.generateAndCommit"
  ],
  "contributes": {
    "commands": [
      {
        "command": "lazyCommit.generateMessage",
        "title": "Lazy Commit: Generate Commit Message"
      },
      {
        "command": "lazyCommit.generateAndCommit",
        "title": "Lazy Commit: Generate And Commit"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Lazy Commit",
      "properties": {
        "lazyCommit.provider": {
          "type": "string",
          "enum": [
            "openai"
          ],
          "default": "openai",
          "description": "AI provider to use. Currently supports 'openai'."
        },
        "lazyCommit.openai.model": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "OpenAI model to use for generating commit messages."
        },
        "lazyCommit.openai.apiKey": {
          "type": "string",
          "default": "",
          "markdownDescription": "OpenAI API key. If empty, the extension will use the `OPENAI_API_KEY` environment variable.",
          "scope": "machine"
        },
        "lazyCommit.openai.useProxy": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable calling a proxy endpoint you host that attaches your OpenAI key server-side. When enabled, `proxyBaseUrl` is required and `apiKey` is optional (and typically blank).",
          "scope": "application"
        },
        "lazyCommit.openai.proxyBaseUrl": {
          "type": "string",
          "default": "",
          "markdownDescription": "Base URL of your proxy server that forwards to OpenAI (e.g., `https://yourdomain.com/api/openai`). The extension will POST to `${proxyBaseUrl}/chat/completions`.",
          "scope": "application"
        },
        "lazyCommit.openai.proxyHeaders": {
          "type": "object",
          "default": {},
          "markdownDescription": "Optional static headers to send to your proxy (e.g., `{\"x-api-key\": \"<public-token>\"}`). Do not put secrets here; your proxy should validate and inject your OpenAI key server-side.",
          "scope": "application"
        },
        "lazyCommit.style": {
          "type": "string",
          "enum": [
            "conventional",
            "natural"
          ],
          "default": "conventional",
          "description": "Style of commit message. 'conventional' produces Conventional Commits; 'natural' is a concise plain-English summary."
        },
        "lazyCommit.fewShot.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable few-shot prompting with small example diffs and ideal commit messages."
        },
        "lazyCommit.fewShot.numExamples": {
          "type": "number",
          "default": 3,
          "minimum": 0,
          "maximum": 5,
          "description": "How many built-in few-shot examples to include before your diff."
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./",
    "proxy:start": "npm --prefix proxy run start",
    "proxy:dev": "npm --prefix proxy run dev"
  },
  "devDependencies": {
    "@types/node": "^20.14.9",
    "@types/vscode": "^1.85.0",
    "typescript": "^5.5.4",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "openai": "^4.58.2",
    "undici": "^5.27.2"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/christopherdang/LazyCommit.git"
  },
  "bugs": {
    "url": "https://github.com/christopherdang/LazyCommit/issues"
  },
  "homepage": "https://github.com/christopherdang/LazyCommit#readme",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs"
}
